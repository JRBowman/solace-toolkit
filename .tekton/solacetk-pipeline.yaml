apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipelinesascode.tekton.dev/on-event: "[push]"
  name: solacetk-pipeline
spec:
  params:
    - name: APP_NAME
      value: "{{name}}"
    - name: GIT_REPO
      value: "{{repository.links.html.href}}"
    - name: GIT_REVISION
      value: "{{push.changes.new.name}}"
    - name: IMAGE_NAME
      value: 'image-registry.openshift-image-registry.svc:5000/bowman-prod/{{name}}'
    - name: PATH_CONTEXT
      value: .
  pipelineSpec:
    params:
      - name: APP_NAME
      - name: GIT_REPO
      - name: GIT_REVISION
      - name: IMAGE_NAME
      - name: PATH_CONTEXT
    tasks:
      - name: fetch-repository
        params:
          - name: url
            value: $(params.GIT_REPO)
          - name: revision
            value: $(params.GIT_REVISION)
          - name: deleteExisting
            value: 'true'
        taskRef:
          kind: ClusterTask
          name: git-clone
        workspaces:
          - name: output
            workspace: workspace
      - name: deploy
        params:
          - name: SCRIPT
            value: oc rollout status deploy/$(params.APP_NAME)
        runAfter:
          - dockerfile-build
        taskRef:
          kind: ClusterTask
          name: openshift-client
      - name: dockerfile-build
        params:
          - name: IMAGE
            value: $(params.IMAGE_NAME)
          - name: STORAGE_DRIVER
            value: vfs
          - name: DOCKERFILE
            value: ./Dockerfile
          - name: CONTEXT
            value: $(params.PATH_CONTEXT)
          - name: TLSVERIFY
            value: 'true'
          - name: FORMAT
            value: oci
        runAfter:
          - fetch-repository
        taskRef:
          kind: ClusterTask
          name: buildah
        workspaces:
          - name: source
            workspace: workspace
    workspaces:
      - name: workspace